import { translate } from '../../../../externalization';

export const classes = {
  sstInputFormContainer: 'sst-input-form-container',
  sstInputSpacing: 'sst-input-spacing',
  sstAlignWithLoader: 'sst-align-with-loader',
  sstFormLoader: 'sst-form-loader',
  sstAddFieldAction: 'sst-add-field-action',
  sstTableSpacing: 'sst-table-spacing',
  sstTableActionIcons: 'sst-table-action-icons',
  sstTableActionView: 'sst-table-action-view',
  sstAddEmptyError: 'sst-add-empty-error',
  sstTableActionDelete: 'sst-table-action-delete',
  sstModalScroll: 'sst-modal-scroll',
  sstFieldInputSpacing: 'sst-field-input-spacing',
};

//Labels and Messages
export const translatedStrings = {
  saveBtn: translate('SAVE'),
  resetBtn: translate('RESET'),
  cancelBtn: translate('CANCEL'),
  addBtn: translate('ADD'),
  descriptionLabel: translate('DESCRIPTION'),
  descriptionHelperLabel: translate('OPTIONAL'),
  cancelModalTitle: translate('DISCARD_CHANGES'),
  yes: translate('YES'),
  no: translate('NO'),
  field: translate('FIELD'),
  yesDelete: translate('YES_DELETE'),
  noBtn: translate('NO'),
  noneText: translate('NONE'),
  actionColumn: translate('ACTION'),
  fieldsLabel: translate('FIELDS'),
  none: translate('NONE'),
  name: translate('NAME'),
  password: translate('PASSWORD'),
  discardChangesModal: translate('YES_DISCARD'),
  passwordPolicyLabel: translate('STATIC_SECRETS_TEMPLATE_MODULE.PASSWORD_POLICY'),
  passwordAlreadyExists: translate('STATIC_SECRETS_TEMPLATE_MODULE.PASSWORD_ALREADY_EXISTS'),
  addFieldBtn: translate('STATIC_SECRETS_TEMPLATE_MODULE.ADD_FIELD'),
  addFieldModalTitle: translate('STATIC_SECRETS_TEMPLATE_MODULE.ADD_FIELD'),
  sstNameLabel: translate('STATIC_SECRETS_TEMPLATE_MODULE.SECRET_TEMPLATE_NAME'),
  fieldName: translate('STATIC_SECRETS_TEMPLATE_MODULE.FIELD_NAME'),
  fieldType: translate('STATIC_SECRETS_TEMPLATE_MODULE.FIELD_TYPE'),
  mandatoryField: translate('STATIC_SECRETS_TEMPLATE_MODULE.IS_MANDATORY_FIELD'),
  mandatory: translate('STATIC_SECRETS_TEMPLATE_MODULE.IS_MANDATORY'),
  maskedField: translate('STATIC_SECRETS_TEMPLATE_MODULE.IS_MASKED_FIELD'),
  masked: translate('STATIC_SECRETS_TEMPLATE_MODULE.IS_MASKED'),
  fieldNameAlreadyExists: translate('STATIC_SECRETS_TEMPLATE_MODULE.NAME_EXIT'),
  fieldAdded: translate('STATIC_SECRETS_TEMPLATE_MODULE.FIELD_ADDED'),
  fieldRemoved: translate('STATIC_SECRETS_TEMPLATE_MODULE.FIELD_REMOVED'),
  rotationalInterval: translate('STATIC_SECRETS_TEMPLATE_MODULE.SECRET_ROTATION_INTERVAL'),
  maskedLabel: translate('STATIC_SECRETS_TEMPLATE_MODULE.IS_MASKED_FIELD'),
  rotationalIntervalHelperText: translate('STATIC_SECRETS_TEMPLATE_MODULE.ROTATION_HELPER_TEXT'),
  fieldRemove: translate('STATIC_SECRETS_TEMPLATE_MODULE.REMOVE_FIELD'),
  fieldDeleteMessage: translate('STATIC_SECRETS_TEMPLATE_MODULE.FIELD_DELETE_MESSAGE'),
  selectPolicy: translate('STATIC_SECRETS_TEMPLATE_MODULE.SELECT_POLICY'),
  policyHelperText: translate('STATIC_SECRETS_TEMPLATE_MODULE.POLICY_HELPER_TEXT'),
  cancelModalMessage: translate('STATIC_SECRETS_TEMPLATE_MODULE.CANCEL_FIELD_MESSAGE'),
  singleLineChar: translate('STATIC_SECRETS_TEMPLATE_MODULE.SINGLE_LINE_CHAR'),
  multiLineChar: translate('STATIC_SECRETS_TEMPLATE_MODULE.MULTI_LINE_CHAR'),
  passwordMandatoryText: translate('STATIC_SECRETS_TEMPLATE_MODULE.PASSWORD_MANDATORY_TEXT'),
  viewFieldTooltip: translate('STATIC_SECRETS_TEMPLATE_MODULE.VIEW_TOOLTIP'),
  deleteFieldTooltip: translate('STATIC_SECRETS_TEMPLATE_MODULE.DELETE_FIELD'),
};

export const keyName = 'key';
